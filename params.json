{"name":"Aeson-qq","body":"## Data.Aeson.QQ ##\r\n\r\nJSON quasiquatation for Haskell.\r\n\r\nThis package expose the function `aesonQQ` that compile time converts json code into a `Data.Aeson.Value`.\r\n`aesonQQ` got the signature\r\n\r\n    aesonQQ :: QuasiQuoter\r\n\r\nand is used like\r\n\r\n    myCode = [aesonQQ| {age: 23, name: \"Pelle\", likes: [\"mac\",\"Haskell\"] } |]\r\n\r\nwhere it is important that\r\n\r\n* you got no space in `[aesonQQ|` and\r\n* no additional code after `|]`.\r\n\r\nThe quasiquatation can also bind to variables like\r\n\r\n    myCode = [aesonQQ | {age: <| age |>, name: <| name |>} |]\r\n     where age = 34 :: Integer\r\n           name = \"Pelle\"\r\n\r\nor contain Haskell code like\r\n\r\n    myCode = [aesonQQ | {age: <| age + 42 :: Integer |>, name: <| map toUpper name |>} |]\r\n     where age = 34 :: Integer\r\n           name = \"Pelle\"","tagline":"Aeson quasiquoter for Haskell","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}